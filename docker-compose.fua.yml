# Docker Compose file for FUA Generator (Formato Único de Atención - MINSA Perú)
# Usage: docker compose -f docker-compose.yml -f docker-compose.fua.yml up -d
#
# Provides FUA (Formato Único de Atención) generation for reporting to MINSA:
# - FUA Generator: Service for generating FUA reports
# - PostgreSQL: Database for FUA Generator

services:
  fua-generator:
    container_name: peruHCE-fua-generator
    image: marcelius733/fua-generator:dev-0.1.4
    restart: "unless-stopped"
    secrets:
      - fua_db_password
      - fua_token
    ports:
      - "3333:3000"
    environment:
      DB_USER: ${PERUHCE_FUA_GEN_DB_USER:-fuagenerator}
      DB_PASSWORD_FILE: /run/secrets/fua_db_password
      DB_NAME: ${PERUHCE_FUA_GEN_DB:-fuagenerator}
      DB_HOST: 'fua-generator-db'
      DB_PORT: '5432'
      TOKEN_FILE: /run/secrets/fua_token
    depends_on:
      - fua-generator-db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - services-network
      - backend-network

  fua-generator-db:
    container_name: peruHCE-fua-generator-db
    image: postgres:17
    restart: "unless-stopped"
    secrets:
      - fua_db_password
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${PERUHCE_FUA_GEN_DB_USER:-fuagenerator}
      POSTGRES_PASSWORD_FILE: /run/secrets/fua_db_password
      POSTGRES_DB: ${PERUHCE_FUA_GEN_DB:-fuagenerator}
    volumes:
      - db-fua-generator:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PERUHCE_FUA_GEN_DB_USER:-fuagenerator} -d ${PERUHCE_FUA_GEN_DB:-fuagenerator}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - services-network

  # Override gateway to include FUA configuration
  gateway:
    environment:
      FUA_CONFIG: |
        upstream fua-generator {
          server fua-generator:3000 max_fails=3 fail_timeout=10s;
        }
      FUA_LOCATIONS: |
        location = /services/fua-generator {
          return 301 /services/fua-generator/;
        }

        location /services/fua-generator/ {
          proxy_pass http://fua-generator/;
          proxy_redirect http://$host/ /services/fua-generator/;

          # Si el upstream falla, devolver 503 con mensaje personalizado
          error_page 502 503 504 = @fua_unavailable;
        }

        # Location para manejar cuando fua-generator no está disponible
        location @fua_unavailable {
          add_header Content-Type application/json always;
          return 503 '{"error": "FUA Generator service is temporarily unavailable", "status": 503}';
        }

volumes:
  db-fua-generator:
    name: peruHCE-db-fua-generator

networks:
  # Red de servicios - Para comunicación inter-servicios
  services-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/24

  # Red de aplicación - Para integración con backend OpenMRS
  backend-network:
    external: true
    name: peruHCE_backend-network

secrets:
  fua_db_password:
    file: ./secrets/fua_db_password.txt
  fua_token:
    file: ./secrets/fua_token.txt
