# Docker Compose file for Monitoring Stack (Grafana, Prometheus, Loki, Alloy)
# Usage: docker compose -f docker-compose.yml -f docker-compose.monitoring.yml up -d
#
# Provides observability for peruHCE:
# - Grafana: Visualization dashboards
# - Prometheus: Metrics collection
# - Loki: Log aggregation
# - Alloy: Telemetry agent

services:
  grafana:
    container_name: peruHCE-grafana
    image: grafana/grafana:latest
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin_password
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      GF_SERVER_ROOT_URL: http://localhost:3001
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - monitoring-network
      - management-network
    secrets:
      - grafana_admin_password

  prometheus:
    container_name: peruHCE-prometheus
    image: prom/prometheus:latest
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitoring-network
      - backend-network

  loki:
    container_name: peruHCE-loki
    image: grafana/loki:latest
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:3100/ready" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitoring-network

  alloy:
    container_name: peruHCE-alloy
    image: grafana/alloy:latest
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:12345:12345"
    volumes:
      - ./monitoring/alloy/config.alloy:/etc/alloy/config.alloy:ro
      - /var/log:/var/log:ro
      - alloy-data:/var/lib/alloy
    command:
      - run
      - /etc/alloy/config.alloy
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy
    depends_on:
      - loki
      - prometheus
    networks:
      - monitoring-network
      - backend-network
      - frontend-network

volumes:
  prometheus-data:
    name: peruHCE-prometheus-data
  loki-data:
    name: peruHCE-loki-data
  alloy-data:
    name: peruHCE-alloy-data
  grafana-data:
    name: peruHCE-grafana-data

networks:
  # Red de monitoreo - Prometheus, Loki, Grafana
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

  # Red de gestión - Para Grafana acceda a Portainer
  management-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/24

  # Red de aplicación - Para scraping de métricas
  backend-network:
    external: true
    name: peruHCE_backend-network

  # Red pública - Para recolección de logs
  frontend-network:
    external: true
    name: peruHCE_frontend-network

secrets:
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt
