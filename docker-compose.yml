services:
  portainer:
    container_name: peruHCE-portainer
    image: portainer/portainer-ce:lts
    command: -H unix:///var/run/docker.sock --http-enabled --base-url=/portainer
    restart: "unless-stopped"
    ports:
      - "9443:9443"  # HTTPS Portainer Web UI
      - "9000:9000"  # HTTP Portainer Web UI
      - "8000:8000"  # Necessary for other reason
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
  gateway:
    container_name: peruHCE-gateway
    image: openmrs/openmrs-reference-application-3-gateway:${TAG:-qa}
    restart: "unless-stopped"
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  frontend:
    container_name: peruHCE-frontend
    image: openmrs/openmrs-reference-application-3-frontend:${TAG:-qa}
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config-openmrs.json,/openmrs/spa/config-pucp.json
      SPA_DEFAULT_LOCALE: es
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend
    volumes:
      - openmrs-frontend:/usr/share/nginx/html/

  backend:
    container_name: peruHCE-backend
    image: openmrs/openmrs-reference-application-3-backend:${TAG:-qa}
    restart: "unless-stopped"
    ports:
      - "8080:8080"
    depends_on:
      - db-replic
    #env_file: "enviromentVariables.env"
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OPENMRS_DB_PASSWORD:-openmrs}
      OMRS_OCL_TOKEN: ${OMRS_OCL_TOKEN:-openmrs}
    build:
      args:
        GHP_USERNAME: ${GHP_USERNAME}
        GHP_PASSWORD: ${GHP_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data

  # MariaDB master
  db:
    container_name: peruHCE-db-master
    image: mariadb:10.11.7
    restart: "unless-stopped"
    command: "mysqld --character-set-server=utf8mb3 --collation-server=utf8mb3_general_ci --server-id=1 --log-bin=mysql-bin --binlog-format=ROW --sync-binlog=1 --log-slave-updates=1"
    #command: "mysqld --character-set-server=utf8mb3 --collation-server=utf8mb3_general_ci"
    healthcheck:
      test: "mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    #env_file: "enviromentVariables.env"
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
      OMRS_DB_REPL_USER: ${OMRS_DB_REPL_USER:-openmrs_repl}
      OMRS_DB_REPL_PASSWORD: ${OMRS_DB_REPL_PASSWORD:-openmrs_repl}
      OMRS_DB_BACKUP_USER: ${OMRS_DB_BACKUP_USER:-openmrs_b}
      OMRS_DB_BACKUP_PASSWORD: ${OMRS_DB_BACKUP_PASSWORD:-openmrs_b}

    ports:
      - "3307:3306" # 3307 for host
    volumes:
      - ./db-config/init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
      - db-data:/var/lib/mysql
      - db-backup:/backup

  # MariaDB Replic
  db-replic:
    container_name: peruHCE-db-replic
    image: mariadb:10.11.7
    restart: "unless-stopped"
    command: "mysqld --character-set-server=utf8mb3 --collation-server=utf8mb3_general_ci --server-id=2 --log-bin=mysql-bin --binlog-format=ROW --sync-binlog=1 --log-slave-updates=1 --read-only=1"
    healthcheck:
      test: "mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    #env_file: "enviromentVariables.env"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
      OMRS_DB_REPL_USER: ${OMRS_DB_REPL_USER:-openmrs_repl}
      OMRS_DB_REPL_PASSWORD: ${OMRS_DB_REPL_PASSWORD:-openmrs_repl}
      OMRS_DB_BACKUP_USER: ${OMRS_DB_BACKUP_USER:-openmrs_b}
      OMRS_DB_BACKUP_PASSWORD: ${OMRS_DB_BACKUP_PASSWORD:-openmrs_b}
    depends_on:
      - db
    ports:
      - "3308:3306" # 3308 for host
    volumes:
      - ./db-config/init-slave.sh:/docker-entrypoint-initdb.d/init-slave.sh
      - db-data-r:/var/lib/mysql
      - db-backup-r:/backup
  
  # DNS Server
  dns:
    container_name: peruHCE-dns
    image: pihole/pihole:2025.03.0
    restart: "unless-stopped"    
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "81:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      - "444:443/tcp"
    #env_file: "enviromentVariables.env"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
      TZ: 'America/Lima'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: ${DNS_PASSWORD:-openmrs}
      FTLCONF_dns_listeningMode: 'all'
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - pihole-data:/etc/pihole
      - pihole-dnsmaq:/etc/dnsmasq.d


  fua-generator:
    container_name: peruHCE-fua-generator
    image: marcelius733/fua-generator:dev-0.1.2
    ports:
      - "3333:3000"
    #env_file: "enviromentVariables.env"
    environment:
      DB_USER: ${PERUHCE_FUA_GEN_DB_USER:-fuagenerator}
      DB_PASSWORD: ${PERUHCE_FUA_GEN_DB_PASSWORD:-fuagenerator}
      DB_NAME: ${PERUHCE_FUA_GEN_DB:-fuagenerator}
      DB_HOST: 'fua-generator-db'
      DB_PORT: '5432'
      TOKEN: ${PERUHCE_FUA_GEN_TOKEN:-fuagenerator}
    depends_on:
      - fua-generator-db

  fua-generator-db:
    container_name: peruHCE-fua-generator-db
    image: postgres:15
    ports:
      - "5433:5432"
    #env_file: "enviromentVariables.env"
    environment:
      POSTGRES_USER: ${PERUHCE_FUA_GEN_DB_USER:-fuagenerator}
      POSTGRES_PASSWORD: ${PERUHCE_FUA_GEN_DB_PASSWORD:-fuagenerator}
      POSTGRES_DB: ${PERUHCE_FUA_GEN_DB:-fuagenerator}
    volumes:
      - db-fua-generator:/var/lib/postgresql/data

volumes:
  openmrs-frontend: ~
  openmrs-data: ~
  db-data: ~
  db-backup: ~
  db-data-r: ~  
  db-backup-r: ~
  db-fua-generator: ~
  gateway-data: ~
  portainer-data: ~
  pihole-data: ~
  pihole-dnsmaq: ~
