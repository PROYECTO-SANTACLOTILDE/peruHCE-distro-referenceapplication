services:
  portainer:
    container_name: peruHCE-portainer
    image: portainer/portainer-ce:lts
    restart: "unless-stopped"
    ports:
      - "9443:9443" # HTTPS Portainer Web UI
      - "9000:9000" # HTTP Portainer Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
  gateway:
    container_name: peruHCE-gateway
    image: openmrs/openmrs-reference-application-3-gateway:${TAG:-qa}
    restart: "unless-stopped"
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    container_name: peruHCE-frontend
    image: openmrs/openmrs-reference-application-3-frontend:${TAG:-qa}
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config-openmrs.json,/openmrs/spa/config-pucp.json
      SPA_DEFAULT_LOCALE: es
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/" ]
      timeout: 5s
    depends_on:
      - backend
    volumes:
      - openmrs-frontend:/usr/share/nginx/html/

  backend:
    container_name: peruHCE-backend
    image: openmrs/openmrs-reference-application-3-backend:${TAG:-qa}
    restart: "unless-stopped"
    secrets:
      - mysql_openmrs_password
      - omrs_ocl_token
    ports:
      - "8080:8080"
    depends_on:
      - db-replic
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD_FILE: /run/secrets/mysql_openmrs_password
      OMRS_OCL_TOKEN_FILE: /run/secrets/omrs_ocl_token
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/openmrs" ]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data

  # MariaDB master
  db:
    container_name: peruHCE-db-master
    image: mariadb:11.8
    restart: "unless-stopped"
    command: "mariadbd --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --server-id=1 --log-bin=mysql-bin --binlog-format=ROW --sync-binlog=1 --log-slave-updates=1"
    secrets:
      - mysql_root_password
      - mysql_openmrs_password
      - mysql_repl_password
      - mysql_backup_password
    healthcheck:
      test: [ "CMD-SHELL", "mysql --user=${OMRS_DB_USER:-openmrs} --password=$$(cat /run/secrets/mysql_openmrs_password) --execute 'SHOW DATABASES;'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_openmrs_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      OMRS_DB_REPL_USER: ${OMRS_DB_REPL_USER:-openmrs_repl}
      OMRS_DB_REPL_PASSWORD_FILE: /run/secrets/mysql_repl_password
      OMRS_DB_BACKUP_USER: ${OMRS_DB_BACKUP_USER:-openmrs_backup}
      OMRS_DB_BACKUP_PASSWORD_FILE: /run/secrets/mysql_backup_password
    ports:
      - "3307:3306" # 3307 for host
    volumes:
      - ./scripts/database/db_init_master.sh:/docker-entrypoint-initdb.d/db_init_master.sh
      - db-data:/var/lib/mysql
      - db-backup:/backup

  # MariaDB Replic
  db-replic:
    container_name: peruHCE-db-replic
    image: mariadb:11.8
    restart: "unless-stopped"
    command: "mariadbd --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --server-id=2 --log-bin=mysql-bin --binlog-format=ROW --sync-binlog=1 --log-slave-updates=1 --read-only=1"
    secrets:
      - mysql_root_password
      - mysql_openmrs_password
      - mysql_repl_password
      - mysql_backup_password
    healthcheck:
      test: [ "CMD-SHELL", "mysql --user=${OMRS_DB_USER:-openmrs} --password=$$(cat /run/secrets/mysql_openmrs_password) --execute 'SHOW DATABASES;'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      OMRS_DB_REPL_USER: ${OMRS_DB_REPL_USER:-openmrs_repl}
      OMRS_DB_REPL_PASSWORD_FILE: /run/secrets/mysql_repl_password
      OMRS_DB_BACKUP_USER: ${OMRS_DB_BACKUP_USER:-openmrs_backup}
      OMRS_DB_BACKUP_PASSWORD_FILE: /run/secrets/mysql_backup_password
    depends_on:
      - db
    ports:
      - "3308:3306" # 3308 for host
    volumes:
      - ./scripts/database/db_init_slave.sh:/docker-entrypoint-initdb.d/db_init_slave.sh
      - db-data-r:/var/lib/mysql
      - db-backup-r:/backup

  # DNS Server
  dns:
    container_name: peruHCE-dns
    image: pihole/pihole:2025.03.0
    restart: "unless-stopped"
    secrets:
      - pihole_password
    ports:
      # DNS Ports - Critical for hospital network
      - "53:53/tcp"
      - "53:53/udp"
      # Web UI Port
      - "81:80/tcp"
      # HTTPS Port
      - "444:443/tcp"
    environment:
      TZ: 'America/Lima'
      FTLCONF_webserver_api_password_FILE: /run/secrets/pihole_password
      FTLCONF_dns_listeningMode: 'all'
      ROOT_DNS_: '8.8.8.8;8.8.4.4;1.1.1.1'
      DNSSEC: 'true'
      DNS_BOGUS_PRIV: 'false'
      DNS_FQDN_REQUIRED: 'false'
      REV_SERVER: 'true'
      REV_SERVER_DOMAIN: 'hospital.local'
      REV_SERVER_TARGET: ${HOSPITAL_GATEWAY:-192.168.1.1}
      REV_SERVER_CIDR: ${HOSPITAL_NETWORK:-192.168.1.0/24}
      CACHE_SIZE: '10000'
      QUERY_LOGGING: 'true'
    volumes:
      - pihole-data:/etc/pihole
      - pihole-dnsmaq:/etc/dnsmasq.d
      - ./dns/custom.list:/etc/pihole/custom.list:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/admin/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_openmrs_password:
    file: ./secrets/mysql_openmrs_password.txt
  mysql_repl_password:
    file: ./secrets/mysql_repl_password.txt
  mysql_backup_password:
    file: ./secrets/mysql_backup_password.txt
  pihole_password:
    file: ./secrets/pihole_password.txt
  omrs_ocl_token:
    file: ./secrets/omrs_ocl_token.txt

volumes:
  openmrs-frontend: ~
  openmrs-data: ~
  db-data: ~
  db-backup: ~
  db-data-r: ~
  db-backup-r: ~
  gateway-data: ~
  portainer-data: ~
  pihole-data: ~
  pihole-dnsmaq: ~
